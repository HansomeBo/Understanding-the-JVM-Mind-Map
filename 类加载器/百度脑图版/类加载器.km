{"root":{"data":{"id":"52cd1e7deb53","created":1564236314,"text":"类加载器","expandState":"expand"},"children":[{"data":{"id":"bvu3irmeteo0","created":1564236386619,"text":"分类","expandState":"collapse"},"children":[{"data":{"id":"bvu3irmemhs0","created":1564236386619,"text":"虚拟机角度","expandState":"collapse"},"children":[{"data":{"id":"bvu3irmeba80","created":1564236386619,"text":"启动类加载器（Bootstrap ClassLoader）","expandState":"collapse"},"children":[{"data":{"id":"bvu3irmeaxc0","created":1564236386619,"text":"HotSpot虚拟机是C++语言实现，是虚拟机的一部分"},"children":[]},{"data":{"id":"bvu3irmenmw0","created":1564236386619,"text":"这个类加载器负责将存放在<JAVA_HOME>\\lib目录中，或者被-Xbootclasspath参数所指定的路径中的，并且是虚拟机识别的类库加载到虚拟机内存中。"},"children":[]},{"data":{"id":"bvu3irmfbx40","created":1564236386620,"text":"启动类加载器无法被Java程序直接引用，用户在编写自定义类加载器时，如果需要把加载请求委派给引导加载器，那直接使用null代替即可"},"children":[]}]},{"data":{"id":"bvu3irmf1og0","created":1564236386620,"text":"所有其它的类加载器","expandState":"collapse"},"children":[{"data":{"id":"bvu3irmf0740","created":1564236386620,"text":"Java语言实现，独立于虚拟机外部，并且全部继承自抽象类"},"children":[]}]}]},{"data":{"id":"bvu3irmf4js0","created":1564236386620,"text":"开发者角度"},"children":[{"data":{"id":"bvu3irmewug0","created":1564236386620,"text":"启动类加载器"},"children":[]},{"data":{"id":"bvu3irmf07s0","created":1564236386620,"text":"扩展类加载器","expandState":"collapse"},"children":[{"data":{"id":"bvu3irmfbo00","created":1564236386620,"text":"负责加载<JAVA_HOME>\\lib\\ext目录中的，或者被java.ext.dirs系统变量所指定的路径中的所有类库，开发者可以直接用扩展类加载器"},"children":[]}]},{"data":{"id":"bvu3irmg1ts0","created":1564236386621,"text":"应用程序加载器","expandState":"collapse"},"children":[{"data":{"id":"bvu3irmfoko0","created":1564236386621,"text":"由于这个类加载器是ClassLoader中的getSystemClassLoader（）方法的返回值，所以一般也称它为系统加载器。"},"children":[]},{"data":{"id":"bvu3irmft7c0","created":1564236386621,"text":"他负责加载用户路径（ClassPath）上所指定的类库，开发者可以直接使用这个类加载器，如果应用程序没有自定义过自己的类加载器\\n一般情况下这个就是程序默认的类加载器"},"children":[]}]}]}]},{"data":{"id":"bvu3irmfvtc0","created":1564236386621,"text":"双亲委派模型（Parents Delegation Model）","expandState":"collapse"},"children":[{"data":{"id":"bvu5987ibc80","created":1564241281302,"text":" ","image":"http://kityminder-img.gz.bcebos.com/7059f90015da4c924d4aac81fdcd5a6402c51f3b","imageTitle":"","imageSize":{"width":200,"height":188}},"children":[]},{"data":{"id":"bvu5awixqew0","created":1564241412600,"text":"一个类加载器首先将类加载请求转发到父类加载器，只有当父类加载器无法完成时才尝试自己加载。"},"children":[]},{"data":{"id":"bvu5d8aa3i00","created":1564241594926,"text":"使得 Java 类随着它的类加载器一起具有一种带有优先级的层次关系，从而使得基础类得到统一。"},"children":[]},{"data":{"id":"bvu5dehgatk0","created":1564241608420,"text":"如果自己写一个Object类放在java.lang下，加载器并不会加载它"},"children":[]}]}]},"template":"right","theme":"classic-compact","version":"1.4.43"}